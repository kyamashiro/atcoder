#!/usr/bin/env python3
# from typing import *


# def solve(N: int, M: int, X: int, A: List[int]) -> int:
def solve(N, M, X, A):
    costs = []
    # XからNまで
    cost = 0
    for i in range(X, N + 1):
        if i in A:
            cost += 1
    costs.append(cost)

    # Xから1まで
    cost = 0
    for i in range(X, 0, -1):
        if i in A:
            cost += 1
    costs.append(cost)
    return min(costs)


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    M = int(next(tokens))
    X = int(next(tokens))
    A = [None for _ in range(M)]
    for i in range(M):
        A[i] = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, M, X, A)
    print(a)


if __name__ == '__main__':
    main()
